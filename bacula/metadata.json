{
  "suggestions": {
  },
  "dependencies": {
    "openssl": ">= 0.0.0",
    "database": ">= 0.0.0"
  },
  "version": "1.1.1",
  "attributes": {
  },
  "maintainer_email": "chef-cookbooks@computerlyrik.de",
  "maintainer": "computerlyrik",
  "description": "Installs and autoconfigures bacula backup system",
  "name": "bacula",
  "recipes": {
  },
  "long_description": "# Description\n\nTested on Ubuntu 12.04 server (should also work on Debian - please report!)\n\nSupports File backup on a dedicated storage server with a single bacula director and multiple clients to be backed up.\n\nPainlessly autoconfigures itself and the Jobs to be done.\nBacks up daily incremental, full weekly. (see usage)\nAlso supports installation of bacula console to observe your backup progresses.\n\n## Autogenerated Jobs\n\n- Files\n- Mysql\n- LDAP\n- Chef server\n\n\n## Recipes\n### Bacula Director (bacula-dir)\n```ruby\nbacula::server \n```\nCentral backup server \n\n### Bacula File Daemon (bacula-fd)\n```ruby\nbacula::client\n```\nUsed by each client to be backed up\n\n### Bacula Storage Daemon (bacula-sd)\n```ruby\nbacula::storage (bacula-sd)\n```\nFor use on storage system\n\n### Bacula Administration Tool BAT (bacula-console-qt)\n```ruby\nbacula::bat\n```\nUsed for Systems with graphic environment - installs and configures \"bat\" Bacula qt-console\n\n# Requirements\n\nCookbooks:\n```ruby\nmysql\ndatabase\nopenssl #for password generation\n```\n\n#Attributes\n\n**default.rb**\n\nConfigure the bacula user\n```ruby\nnode['bacula']['user']\nnode['bacula']['group']\n```\n\n**server.rb**\n\nSet properties for File based backup\n```ruby\nnode['bacula']['volume_size'] = \"1G\"\nnode['bacula']['volume_max'] = 20\nnode['bacula']['label_format'] = \"BaculaFile\"\n```\n\n**client.rb**\n\nSet files to be backed up (see Usage below)\n```ruby\nnode['bacula']['fd']['files']\n```\n\n**storage.rb**\n\nSet up destination of File-Storage\n```ruby\ndefault['bacula']['sd']['backup_dir'] = \"/backup\"\n```\n\n# Usage\n\n\n## Backup Job generation\n\nTo autogenerate jobs the following expressions need to be ```true``` on ```bacula::client``` machine:\n\n**Mysql**\n\n```ruby\nnode['mysql'] && node['mysql']['server_root_password']\n```\n\n**Ldap**\n\n```ruby\nnode['openldap'] && node['openldap']['slapd_type'] == \"master\"\n```\n\n**Chef Server**\n\n```ruby\nnode['fqdn'] == \"chef.#{node['domain']}\"\n```\n\n## Default deployment\n- node A => bacula::server\n- node B => bacula::storage (with much storage)\n- node C-Z => bacula::client\n\n# Examples\n\n## Howto backup files (do not use in production)\nSet on your ```bacula::client``` node\n```ruby\nnode.set['bacula']['fd']['files'] = {\n  'includes' => ['/']],\n  'excludes' => [ '/dev','sys']\n}\n```\n\n\n## Howto change the backup cycle\nTo change the backup cycle make changes in templates/default/bacula-dir.conf\n\n\n# Todo/Ideas\n- Add restore jobs\n- more datastores (postgresql, sqlite)\n- make attributes out of the listening port\n- make mailing work\n\n# Contact\nsee metadata.rb\n",
  "groupings": {
  },
  "recommendations": {
  },
  "replacing": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "platforms": {
    "debian": ">= 0.0.0",
    "ubuntu": ">= 0.0.0"
  },
  "license": "Apache 2.0"
}