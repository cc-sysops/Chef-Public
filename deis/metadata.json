{
  "name": "deis",
  "description": "Installs/Configures Deis PaaS Nodes",
  "long_description": "# Deis Cookbook\nThe [opdemand/deis-cookbook](https://github.com/opdemand/deis-chef) project\ncontains Chef recipes for provisioning Deis nodes.\nTo get started with your own private PaaS, check out the\n[Deis](https://github.com/opdemand/deis) project.\n\n## Requirements\n\nThe Deis cookbook is designed to work with **Ubuntu 12.04 LTS**.  While other Ubuntu or Debian distros may work, they have not been tested.\n\n#### Cookbooks\n\nDeis depends on the following cookbooks:\n\n- `apt` - for managing Ubuntu PPAs\n- `sudo` - for managing /etc/sudoers.d\n- `rsyslog` - for configuring log routing and aggregation\n\n[Berkshelf](http://berkshelf.com) is used for managing cookbook dependencies.\n\n    bundle install    # to install required gems, including berkshelf\n    berks install     # to install cookbooks to the berkshelf directory\n    berks upload      # to upload cookbooks to your chef server\n\n# Attributes\nTODO: List Deis cookbook attributes.\n\n# Usage\n\n#### deis::controller\nThe controller recipe will create a complete Deis controller on a single node including:\n\n * PostgreSQL database\n * Django API Server \n * RabbitMQ installation\n * Celery worker service\n * Nginx site for API \n * Gitosis server\n * Docker daemon\n * Docker-based build system\n * Nginx site for hosting build \"slugs\"\n * Rsyslog server\n\nThe controller will iterate over the `deis-build` databag and configure gitosis access controls in order to restrict `git push` access to repositories.\n\n#### deis::runtime\nThe runtime recipe will prepare a node for hosting Docker containers as part of a Deis runtime layer.  This recipe will configure:\n\n * Docker daemon\n * Buildstep Docker image\n * Rsyslog client\n\nThe runtime recipe will iterate over the `deis-formations` databag and configure and start upstart daemons for any Docker containers assigned to this node.\n\n#### deis::proxy\nThe proxy recipe will prepare a node for routing traffic to containers in a Deis runtime layer.  This recipe will configure:\n\n * Nginx site\n * Rsyslog client\n\nThe proxy recipe will iterate over the `deis-formations` databag and configure Nginx backends for any Docker containers assigned to a given formation.\n\n### Notes\n\nThe destination for rsyslog clients is determined by a Chef search for recipe[deis::controller], and using the `ipaddress` attribute.\n\n# License and Authors\nAuthor:: Gabriel Monroy <gabriel@opdemand.com>\n\nCopyright:: 2013, OpDemand LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at <http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n",
  "maintainer": "Gabriel Monroy",
  "maintainer_email": "gabriel@opdemand.com",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
    "apt": ">= 2.1.2",
    "sudo": ">= 2.2.0",
    "rsyslog": ">= 1.8.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.2.0"
}
