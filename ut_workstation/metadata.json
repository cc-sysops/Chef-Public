{
  "name": "ut_workstation",
  "description": "Unicorn Tears Workstation",
  "long_description": "# <a name=\"title\"></a> Unicorn Tears Workstation Chef Cookbook\n\n[![Build Status](https://travis-ci.org/ut-cookbooks/ut_workstation.png?branch=master)](https://travis-ci.org/ut-workstation/ut_workstation)\n\n## <a name=\"description\"></a> Description\n\nChef cookbook for a Unicorn Tears workstation.\n\n* Website: http://ut-cookbooks.github.io/ut_workstation/\n* Opscode Community Site: http://community.opscode.com/cookbooks/ut_workstation\n* Source Code: https://github.com/ut-cookbooks/ut_workstation\n\nThis is a wrapper (or application) cookbook and is therefore good and\nopinionated about application and configuration defaults. Feel free to try it,\nfork and modify it, or just read and learn.\n\n## <a name=\"usage\"></a> Usage\n\nSimply include `recipe[ut_workstation]` in your run\\_list and set up some bag\nitems (namely under `workstation` and `users`) to drive the cookbook.\n\n## <a name=\"requirements\"></a> Requirements\n\n### <a name=\"requirements-chef\"></a> Chef\n\nTested on 11.4.4 but newer and older version should work just fine.\nFile an [issue][issues] if this isn't the case.\n\n### <a name=\"requirements-platform\"></a> Platform\n\nThe following platforms have been tested with this cookbook, meaning that the\nrecipes run on these platforms without error:\n\n* ubuntu\n* debian\n* mac\\_os\\_x\n\nPlease [report][issues] any additional platforms so they can be added.\n\n### <a name=\"requirements-cookbooks\"></a> Cookbooks\n\nThis cookbook depends on the following external cookbooks:\n\n* [apt][apt_cb]\n* [bashrc][bashrc_cb] (via Git)\n* [chgems][chgems_cb]\n* [chruby][chruby_cb] (currently forked)\n* [dmg][dmg_cb]\n* [homebrew][homebrew_cb] (currently forked)\n* [homesick][homesick_cb]\n* [mac_os_x][mac_os_x_cb] (currently forked)\n* [mosh][mosh_cb]\n* [user][user_cb]\n* [ut_base][ut_base_cb]\n* [python][python_cb]\n* [ruby_build][ruby_build_cb]\n* [xquartz][xquartz_cb]\n* [vagrant][vagrant_cb]\n* [virtualbox][virtualbox_cb] (currently forked)\n* [zip_app][zip_app_cb]\n\n## <a name=\"installation\"></a> Installation\n\nDepending on the situation and use case there are several ways to install\nthis cookbook. All the methods listed below assume a tagged version release\nis the target, but omit the tags to get the head of development. A valid\nChef repository structure like the [Opscode repo][chef_repo] is also assumed.\n\n### <a name=\"installation-site\"></a> From the Opscode Community Site\n\nTo install this cookbook from the Community Site, use the *knife* command:\n\n    knife cookbook site install ut_workstation\n\n### <a name=\"installation-berkshelf\"></a> Using Berkshelf\n\n[Berkshelf][berkshelf] is a cookbook dependency manager and development\nworkflow assistant. To install Berkshelf:\n\n    cd chef-repo\n    gem install berkshelf\n    berks init\n\nTo use the Community Site version:\n\n    echo \"cookbook 'ut_workstation'\" >> Berksfile\n    berks install\n\nOr to reference the Git version:\n\n    repo=\"ut-cookbooks/ut_workstation\"\n    latest_release=$(curl -s https://api.github.com/repos/$repo/git/refs/tags \\\n    | ruby -rjson -e '\n      j = JSON.parse(STDIN.read);\n      puts j.map { |t| t[\"ref\"].split(\"/\").last }.sort.last\n    ')\n    cat >> Berksfile <<END_OF_BERKSFILE\n    cookbook 'chgems',\n      :git => 'git://github.com/$repo.git', :branch => '$latest_release'\n    END_OF_BERKSFILE\n    berks install\n\n### <a name=\"installation-librarian\"></a> Using Librarian-Chef\n\n[Librarian-Chef][librarian] is a bundler for your Chef cookbooks.\nTo install Librarian-Chef:\n\n    cd chef-repo\n    gem install librarian\n    librarian-chef init\n\nTo use the Community Site version:\n\n    echo \"cookbook 'ut_workstation'\" >> Cheffile\n    librarian-chef install\n\nOr to reference the Git version:\n\n    repo=\"ut-cookbooks/ut_workstation\"\n    latest_release=$(curl -s https://api.github.com/repos/$repo/git/refs/tags \\\n    | ruby -rjson -e '\n      j = JSON.parse(STDIN.read);\n      puts j.map { |t| t[\"ref\"].split(\"/\").last }.sort.last\n    ')\n    cat >> Cheffile <<END_OF_CHEFFILE\n    cookbook 'chgems',\n      :git => 'git://github.com/$repo.git', :ref => '$latest_release'\n    END_OF_CHEFFILE\n    librarian-chef install\n\n## <a name=\"recipes\"></a> Recipes\n\n### <a name=\"recipes-default\"></a> default\n\ncoming soon...\n\n## <a name=\"attributes\"></a> Attributes\n\ncoming soon...\n\n## <a name=\"lwrps\"></a> Resources and Providers\n\nThere are **no** resources and providers.\n\n## <a name=\"development\"></a> Development\n\n* Source hosted at [GitHub][repo]\n* Report issues/Questions/Feature requests on [GitHub Issues][issues]\n\nPull requests are very welcome! Make sure your patches are well tested.\nIdeally create a topic branch for every separate change you make.\n\n## <a name=\"license\"></a> License and Author\n\nAuthor:: [Fletcher Nichol][fnichol] (<fnichol@nichol.ca>) [![endorse](http://api.coderwall.com/fnichol/endorsecount.png)](http://coderwall.com/fnichol)\n\nCopyright 2013, Fletcher Nichol\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[apt_cb]:         http://community.opscode.com/cookbooks/apt\n[bashrc_cb]:      https://github.com/fnichol/chef-bashrc\n[chgems_cb]:      http://community.opscode.com/cookbooks/chgems\n[chruby_cb]:      http://community.opscode.com/cookbooks/chruby\n[dmg_cb]:         http://community.opscode.com/cookbooks/dmg\n[homebrew_cb]:    http://community.opscode.com/cookbooks/homebrew\n[homesick_cb]:    http://community.opscode.com/cookbooks/homesick\n[mac_os_x_cb]:    http://community.opscode.com/cookbooks/mac_os_x\n[mosh_cb]:        http://community.opscode.com/cookbooks/mosh\n[user_cb]:        http://community.opscode.com/cookbooks/user\n[ut_base_cb]:     http://community.opscode.com/cookbooks/ut_base\n[python_cb]:      http://community.opscode.com/cookbooks/python\n[ruby_build_cb]:  http://community.opscode.com/cookbooks/ruby_build\n[xquartz_cb]:     http://community.opscode.com/cookbooks/xquartz\n[vagrant_cb]:     http://community.opscode.com/cookbooks/vagrant\n[virtualbox_cb]:  http://community.opscode.com/cookbooks/virtualbox\n[zip_app_cb]:     http://community.opscode.com/cookbooks/zip_app\n\n[berkshelf]:    http://berkshelf.com/\n[chef_repo]:    https://github.com/opscode/chef-repo\n[cheffile]:     https://github.com/applicationsonline/librarian/blob/master/lib/librarian/chef/templates/Cheffile\n[librarian]:    https://github.com/applicationsonline/librarian#readme\n\n[fnichol]:      https://github.com/fnichol\n[repo]:         https://github.com/ut-cookbooks/ut_workstation\n[issues]:       https://github.com/ut-cookbooks/ut_workstation/issues\n",
  "maintainer": "Fletcher Nichol",
  "maintainer_email": "fnichol@nichol.ca",
  "license": "Apache 2.0",
  "platforms": {
    "mac_os_x": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "debian": ">= 0.0.0"
  },
  "dependencies": {
    "apt": "~> 2.0.0",
    "bashrc": ">= 0.0.0",
    "chgems": "~> 1.0.2",
    "chruby": ">= 0.0.0",
    "dmg": "~> 1.1.0",
    "homebrew": ">= 0.0.0",
    "homesick": "~> 0.4.0",
    "mac_os_x": ">= 0.0.0",
    "mosh": "~> 0.3.0",
    "ubuntu": "~> 1.1.2",
    "user": "~> 0.3.0",
    "ut_base": "~> 1.0.2",
    "python": "~> 1.3.4",
    "ruby_build": "~> 0.8.0",
    "xquartz": "~> 1.0.0",
    "vagrant": "~> 0.2.0",
    "virtualbox": ">= 0.0.0",
    "zip_app": "~> 0.2.2"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "1.0.4"
}