{
  "dependencies": {
    "python": ">= 0.0.0"
  },
  "name": "raxmon-cli",
  "maintainer_email": "evan.ochs@rackspace.com",
  "attributes": {
  },
  "license": "Apache 2.0",
  "suggestions": {
  },
  "platforms": {
  },
  "maintainer": "Evan Ochs - Rackspace Hosting",
  "long_description": "Description\n===========\n* Installs the python-pip package in Debian and RedHat based systems, and then uses pip to install the Rackspace Cloud Monitoring client, raxmon-cli, via pip\n\n* The full raxmon-cli source can be viewed at https://github.com/racker/rackspace-monitoring-cli\n\n* For more info on Rackspace Cloud Monitoring please visit http://www.rackspace.com/cloud/cloud_hosting_products/monitoring/\n\n* The Getting Started Guide for Rackspace Cloud Monitoring is avaialble at http://docs.rackspace.com/cm/api/cm-getting-started-latest/index.html\n** This guide includes examples for using the raxmon-cli to view/create entities/checks/alarms\n\n* The full API Developer Guide is available at http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/overview.html\n\n\nRequirements\n============\n* python and python-pip (installed by this cookbook)\n\n* A Rackspace cloud server username and api key to use the raxmon-cli\n\n* If you want automatic credentials added to the raxmon-cli commands for the root user, an encrypted data_bag named rackspace must be created with an item called cloud.  \n  * If you do not want to use the /root/.raxrc file to manage the credentials for root, skip the following section \n\n###Setting up the .raxrc file for automatic cloud login credentials for root\n####If you already have an encrypted_data_bag_secret file created and pushed out to your chef nodes\n* Create the new encrypted data_bag\nknife data bag create --secret-file <LOCATION/NAME OF SECRET FILE>  rackspace cloud\n\n* Make the json file opened look like the following, then save and exit your editor:\n{\n  \"id\": \"cloud\",\n  \"raxusername\": \"<YOUR CLOUD SERVER USERNAME\",\n  \"raxapikey\": \"<YOUR CLOUD SERVER API KEY\"\n}\n\n####If you are not currently using an encrypted_data_bag_secret file\n* Create a new secret file\nopenssl rand -base64 512 | tr -d '\\r\\n' > /tmp/my_data_bag_key\n\n* The /tmp/my_data_bag_key (or whatever you called it in the above step) needs to be pushed out to your chef nodes to /etc/chef/encrypted_data_bag_secret\n\n* Create the new encrypted data_bag\nknife data bag create --secret-file /tmp/my_data_bag_key rackspace cloud\n\n* Make the json file opened look like the following, then save and exit your editor:\n{\n  \"id\": \"cloud\",\n  \"raxusername\": \"<YOUR CLOUD SERVER USERNAME\",\n  \"raxapikey\": \"<YOUR CLOUD SERVER API KEY\"\n}\n\n\n\nAttributes\n==========\nFrom encrypted data bag rackspace with item cloud:\n* ['raxusername']\n* ['raxapikey']\n\nUsage\n=====\n####Using the .raxrc file\n*Follow the steps under the Requirements section above to create the encrypted data bag for the .raxrc file\n* As root user you can manage your Rackspace Cloud Monitoring settings via the raxmon-cli tools, see the description above for links to the documentation\n  * If you do not set the .raxrc credentials, or you want to use raxmon-cli from a non-root user, you can still access the Rackspace Cloud Monitoring API by using the --username and --api-key options on your raxmon commands\n\n#### Not using the .raxrc file\n* Do not create the rackspace cloud encrypted databag item\n* Access the Rackspace Cloud Monitoring API by using the --username and --api-key options on your raxmon commands\n",
  "version": "0.0.4",
  "recommendations": {
  },
  "recipes": {
  },
  "groupings": {
  },
  "conflicting": {
  },
  "replacing": {
  },
  "description": "Installs/Configures raxmon-cli",
  "providing": {
  }
}