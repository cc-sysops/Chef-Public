{
  "name": "java_wrapper",
  "description": "Installs/Configures java_wrapper",
  "long_description": "java_wrapper Cookbook\n=====================\n\nOverview\n========\nThis cookbook provides `java_wrapper`, a resource that wrap a java application\nto be easily managed using start up scripts. It uses http://wrapper.tanukisoftware.com/.\n\nRequirements\n============\nThis cookbook has only be tested on linux system. Tanuki java wrapper works on\nWindows system, but considering this cookbook has never been tested on Windows,\nit most likely not work.\n\nAttribute Parameters\n----------\nCustomize the attributes to suit your need, the following attributes\nhave to be provided:\n\n- `app_name`: the name of the application, if not provided, it uses the name of the resource.\n- `classpath`: the classpath of the application\n- `app_parameters`: the array of String that will be passed to the application\n- `java_parameters`: The array of java parameters\n\nThis attributes can be used to further customize the application:\n- `app_long_name`: the long name use for the daemon\n- `app_dir`: the directory in which the application is deployed, it defaults to `/opt/#{app_name}`\n- `bin_dir`: the bin directory for the wrapper, it defaults to `#{app_dir}/bin`\n- `lib_idr`: the lib directory for the wrapper, it defaults to `#{app_dir}/lib`\n- `conf_dir`: the conf directory for the wrapper, it defaults to `#{app_dir}/conf`\n- `logs_dir`: the log directory for the wrapper, it defaults to `/var/log/#{name}`\n- `init_mem_MB`: the mininum memory in MB for the JVM, defaults to 3\n- `max_mem_MB`: the maximum memory in MB for the JVM, defaults to 64\n- `run_as_user`: the user running the wrapper, defaults to root\n- `wrapper_version`: the version of the java wrapper, defaults to 3.5.21\n- `wrapper_os`: the os for the java wrapper, defaults to linux\n- `wrapper_cpu`: the cpu for the java wrapper, defaults to x86\n- `wrapper_bit`: the architecture for the java wrapper, defaults to 64\n- `wrapper_extension`: the extension for the java wrapper, defaults to tar.gz\n- `wrapper_url`: the url to download the wrapper, defaults to \"http://wrapper.tanukisoftware.com/download/#{wrapper_version}/wrapper-#{wrapper_os}-#{wrapper_cpu}-#{wrapper_bit}-#{wrapper_version}.#{wrapper_extension}\"\n\nUsage\n-----\nYou will find usage in the test recipe at https://github.com/arussel/chef-java-wrapper/blob/master/test/fixtures/cookbooks/test_java_wrapper/recipes/default.rb\n\njava_wrapper 'jetty' do\n  app_parameters [\"org.mortbay.start.Main\"]\n  classpath [\"/usr/local/jetty/start.jar\"]\n  java_parameters [\"-Djetty.home=/usr/local/jetty\"]\nend\n\njava_wrapper 'play' do\n  classpath [\"#{helloworld_dir}/target/staged/*\"]\n  app_parameters [\"play.core.server.NettyServer\", \"#{helloworld_dir}\"]\n  java_parameters [\"-Dhttp.port=9001\"]\nend\n\nContributing\n------------\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\nAuthors: Alexandre Russel\n",
  "maintainer": "Alexandre Russel",
  "maintainer_email": "alexandre@russel.fr",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "java_wrapper": "Wrap a java application"
  },
  "version": "0.1.0"
}