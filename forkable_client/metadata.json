{
  "name": "forkable_client",
  "description": "Provides forked chef-client runs",
  "long_description": "ForkableClient\n==============\n\nLike modifying code on the fly? Like reworking internals of running\ncode to do interesting things? Like not losing a huge chunk of memory\nbecause some jerk cookbook decided to load a 100M json file just for\nthe hell of it? Then this cookbook is for you!\n\nWhat's it do?\n-------------\n\nThis cookbook adds forking support to chef-client runs. It is based on the\nwork within [this ticket](http://tickets.opscode.com/browse/CHEF-3104). \nAfter this cookbook has loaded, client runs will fork themselves and then \nconverge. What this provides is less worry about what cookbooks may \nbe doing (and loading) that is going to bloat out the memory of the process. \nIt's just that simple.\n\nHow do I use it?\n----------------\n\nJust add it to your node's run list (and probabably restart your daemon if it's\ncurrently running)\n\n  `knife node run_list add my.amazing.node recipe[forkable_client]`\n\nSingle runs\n-----------\n\nThis cookbook does not work for single runs. It _requires_ an interval based\nrun (daemonized if you'd like), as the first run will fail by design. The reason\nfor the failure is that we need to adjust how the client performs the run, and\nwe don't want it to attempt to converge the node before we get the modifications\napplied. So a first run will end with something like this:\n\n```\nERROR: Running exception handlers\nFATAL: Saving node information to /var/cache/chef/failed-run-data.json\nERROR: Exception handlers complete\nERROR: ForkedClientInsertion: Chef client is now forkable. This is a non-fatal error.\nFATAL: Stacktrace dumped to /var/cache/chef/chef-stacktrace.out\nERROR: Sleeping for 5 seconds before trying again\n```\n\nBut the next run will show the new functionality at work:\n\n```\nINFO: Forking chef instance to converge...\nINFO: Fork successful. Waiting for new chef pid: 16231\nINFO: Forked instance now converging\nINFO: *** Chef 0.10.10 ***\n...\nINFO: Chef Run complete in 4.34858479 seconds\nINFO: Running report handlers\nINFO: Report handlers complete\nINFO: Forked instance completed. Exiting.\nINFO: Forked converge complete\n```\n\nReferences\n----------\n\nRepo: https://github.com/chrisroberts/cookbook-forkable_client\n\n<small>\n* http://tickets.opscode.com/browse/CHEF-3104\n* https://github.com/opscode/chef/pull/291\n</small>\n",
  "maintainer": "Chris Roberts",
  "maintainer_email": "chrisroberts.code@gmail.com",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.0.1"
}